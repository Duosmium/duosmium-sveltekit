CREATE TABLE "rankings" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "rankings_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854776000 START WITH 1 CACHE 1),
	"result_id" bigint NOT NULL,
	"school_id" bigint NOT NULL,
	"rank" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "rankings" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "results" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "results_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854776000 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL,
	"duosmium_id" text NOT NULL,
	"data" jsonb,
	"title" text NOT NULL,
	"short_title" text NOT NULL,
	"date_string" text NOT NULL,
	"location" text NOT NULL,
	"level" text NOT NULL,
	"logo" text DEFAULT 'default.png' NOT NULL,
	"official" boolean DEFAULT false NOT NULL,
	"preliminary" boolean DEFAULT false NOT NULL,
	"hidden" boolean DEFAULT false NOT NULL,
	"season" bigint NOT NULL,
	CONSTRAINT "results_duosmium_id_key" UNIQUE("duosmium_id")
);
--> statement-breakpoint
ALTER TABLE "results" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "schools" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "schools_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854776000 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"city" text,
	"state" text,
	"country" text DEFAULT 'United States' NOT NULL,
	CONSTRAINT "location" UNIQUE("name","city","state","country")
);
--> statement-breakpoint
ALTER TABLE "schools" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "rankings" ADD CONSTRAINT "rankings_result_id_fkey" FOREIGN KEY ("result_id") REFERENCES "public"."results"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "rankings" ADD CONSTRAINT "rankings_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
CREATE INDEX "rankings_result_id_idx" ON "rankings" USING btree ("result_id" int8_ops);--> statement-breakpoint
CREATE INDEX "rankings_school_id_idx" ON "rankings" USING btree ("school_id" int8_ops);--> statement-breakpoint
CREATE INDEX "results_created_at_idx" ON "results" USING btree ("created_at" timestamptz_ops);--> statement-breakpoint
CREATE INDEX "results_level_idx" ON "results" USING btree ("level" text_ops);--> statement-breakpoint
CREATE INDEX "results_season_idx" ON "results" USING btree ("season" int8_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "schools_index" ON "schools" USING btree ("id" text_ops,"name" int8_ops,"city" int8_ops,"state" int8_ops,"country" text_ops);--> statement-breakpoint
CREATE INDEX "schools_name_idx" ON "schools" USING btree ("name" text_ops);--> statement-breakpoint
CREATE POLICY "Admin privileges" ON "rankings" AS PERMISSIVE FOR ALL TO public USING ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean) WITH CHECK ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean);--> statement-breakpoint
CREATE POLICY "Public read non-hidden" ON "rankings" AS PERMISSIVE FOR SELECT TO public;--> statement-breakpoint
CREATE POLICY "Admin privileges" ON "results" AS PERMISSIVE FOR ALL TO public USING ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean) WITH CHECK ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean);--> statement-breakpoint
CREATE POLICY "Public read non-hidden" ON "results" AS PERMISSIVE FOR SELECT TO public;--> statement-breakpoint
CREATE POLICY "Admin privileges" ON "schools" AS PERMISSIVE FOR ALL TO public USING ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean) WITH CHECK ((((( SELECT auth.jwt() AS jwt) -> 'app_metadata'::text) ->> 'admin'::text))::boolean);--> statement-breakpoint
CREATE POLICY "Public read non-hidden" ON "schools" AS PERMISSIVE FOR SELECT TO public;